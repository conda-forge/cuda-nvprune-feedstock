{% set name = "cuda-nvprune" %}
{% set version = "13.0.85" %}
{% set cuda_version = "13.0" %}
{% set platform = "linux-x86_64" %}  # [linux64]
{% set platform = "linux-ppc64le" %}  # [ppc64le]
{% set platform = "linux-sbsa" %}  # [aarch64]
{% set platform = "windows-x86_64" %}  # [win]
{% set extension = "tar.xz" %}  # [not win]
{% set extension = "zip" %}  # [win]

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://developer.download.nvidia.com/compute/cuda/redist/cuda_nvprune/{{ platform }}/cuda_nvprune-{{ platform }}-{{ version }}-archive.{{ extension }}
  sha256: b182d8b0398ba9ff8ee75fc2ffef3ff1e2069e6bec6938bcf02a6c9e69d40456  # [linux64]
  sha256: 956e1f1b282522ff40b331e5cea83b5d7a87bd97cd9c2bea3454bb0c6adf5414  # [aarch64]
  sha256: b52ca2d51d0e41c317f68f38ce88f4ae7184443eac04203e7a80fd054f2028ec  # [win]

build:
  number: 0
  binary_relocation: false
  skip: true  # [osx or ppc64le]

requirements:
  build:
    - {{ compiler("c") }}
    - {{ compiler("cxx") }}
    - {{ stdlib("c") }}
    - cf-nvidia-tools 1  # [linux]
  host:
    - cuda-version {{ cuda_version }}
  run:
    - {{ pin_compatible("cuda-version", max_pin="x.x") }}

test:
  requires:
    - patchelf                                                # [linux]
  files:
    - test-rpath.sh                                           # [linux]
  commands:
    - test -f $PREFIX/bin/nvprune  # [unix]
    - if not exist %LIBRARY_BIN%\\nvprune.exe exit 1  # [win]
    - bash test-rpath.sh                                      # [linux]

about:
  home: https://developer.nvidia.com/cuda-toolkit
  license_file: LICENSE
  license: LicenseRef-NVIDIA-End-User-License-Agreement
  license_url: https://docs.nvidia.com/cuda/eula/index.html
  summary: Prunes host object files and libraries to only contain device code
  description: |
    Prunes host object files and libraries to only contain device code for the
    specified targets.
  doc_url: https://docs.nvidia.com/cuda/index.html

extra:
  recipe-maintainers:
    - conda-forge/cuda
